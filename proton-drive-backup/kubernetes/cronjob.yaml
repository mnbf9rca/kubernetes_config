apiVersion: batch/v1
kind: CronJob
metadata:
  name: proton-backup-scheduled
  namespace: proton-backup
  labels:
    app: proton-backup
spec:
  schedule: "0 2 * * *"  # Daily at 2 AM UTC
  timeZone: "UTC"
  concurrencyPolicy: Forbid  # Prevent overlapping backup jobs
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 5
  startingDeadlineSeconds: 300  # 5 minutes
  jobTemplate:
    spec:
      activeDeadlineSeconds: 21600  # 6 hours timeout
      backoffLimit: 2  # Retry failed jobs twice
      template:
        metadata:
          labels:
            app: proton-backup
            job-type: scheduled
          annotations:
            # AppArmor profile for enhanced security
            container.apparmor.security.beta.kubernetes.io/backup: runtime/default
            # Seccomp profile annotation (alternative to securityContext)
            seccomp.security.alpha.kubernetes.io/pod: runtime/default
        spec:
          restartPolicy: OnFailure
          serviceAccountName: proton-backup-sa
          securityContext:
            # Pod-level security context
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: "OnRootMismatch"
            seccompProfile:
              type: RuntimeDefault
            sysctls: []
            supplementalGroups: []
          containers:
          - name: backup
            image: ghcr.io/mnbf9rca/proton-drive-backup:latest
            imagePullPolicy: Always
            securityContext:
              # Container-level security context (overrides pod-level when specified)
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              runAsUser: 1000
              runAsGroup: 1000
              privileged: false
              capabilities:
                drop:
                - ALL
                # No capabilities needed for this workload
              seccompProfile:
                type: RuntimeDefault
              procMount: Default
            env:
            - name: JOB_TYPE
              value: "scheduled"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: JOB_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['job-name']
            envFrom:
            - configMapRef:
                name: proton-backup-config
            - secretRef:
                name: proton-backup-secrets
            volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /config
            - name: tmp
              mountPath: /tmp
            - name: rclone-config-secret
              mountPath: /tmp/rclone-secret
              readOnly: true
            resources:
              requests:
                memory: "512Mi"
                cpu: "250m"
                ephemeral-storage: "2Gi"
              limits:
                memory: "4Gi"
                cpu: "2000m"
                ephemeral-storage: "10Gi"
            livenessProbe:
              exec:
                command:
                - /bin/sh
                - -c
                - "ps aux | grep -v grep | grep -E '(rclone|kopia|backup.sh)' || test -f /tmp/backup-completed"
              initialDelaySeconds: 600  # 10 minutes for initial sync
              periodSeconds: 300        # Check every 5 minutes
              timeoutSeconds: 30
              failureThreshold: 5       # Allow longer running jobs
          volumes:
          - name: data
            persistentVolumeClaim:
              claimName: proton-backup-data-pvc
          - name: config
            persistentVolumeClaim:
              claimName: proton-backup-config-pvc
          - name: tmp
            emptyDir:
              sizeLimit: 5Gi
          - name: rclone-config-secret
            secret:
              secretName: proton-backup-secrets
              items:
              - key: RCLONE_CONFIG
                path: rclone.conf
          nodeSelector:
            kubernetes.io/arch: amd64  # Remove if supporting both architectures