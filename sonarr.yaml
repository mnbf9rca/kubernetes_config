kind: Service
apiVersion: v1
metadata:
  name: sonarr-service
  namespace: downloads
spec:
  selector:
    app: sonarr
  type: NodePort
  ports:
  - protocol: TCP
    port: 8989
    targetPort: 8989
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: sonarr-config-smb-pv
  namespace: downloads
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  local:
    path: /mnt/appdata/sonarr
  mountOptions:
  storageClassName: retain-local-path
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - k2.cynexia.net
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: sonarr-config-smb-pvc
  namespace: downloads
spec:
  volumeName: sonarr-config-smb-pv
  accessModes:
    - ReadWriteMany
  storageClassName: retain-local-path
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: sonarr-media-nfs-pv
  namespace: downloads
spec:
  capacity:
    storage: 6Ti
  accessModes:
    - ReadWriteMany
  storageClassName: retain-local-path
  nfs:
    server: fs.cynexia.net
    path: "/tank/video"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: sonarr-media-nfs-pvc
  namespace: downloads
spec:
  volumeName: sonarr-media-nfs-pv
  accessModes:
    - ReadWriteMany
  storageClassName: retain-local-path
  resources:
    requests:
      storage: 6Ti
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
  namespace: downloads
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      containers:
      - name: sonarr
        securityContext:
          runAsRoot: false
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
        image: linuxserver/sonarr:latest
        env:
        - name: PUID
          value: "110"
        - name: PGID
          value: "998"  
        ports:
        - containerPort: 8989
          protocol: TCP
          name: containerport
        startupProbe:
            failureThreshold: 15
            httpGet:
              path: /
              port: containerport
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
        livenessProbe:
            httpGet:
              path: /
              port: containerport
              scheme: HTTP
            failureThreshold: 5
            periodSeconds: 10
        volumeMounts:
        - name: config
          mountPath: /config
        - name: downloads
          mountPath: /downloads
        - name: tv
          mountPath: /tv
        - name: media
          mountPath: /media
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: sonarr-config-smb-pvc
      - name: downloads
        persistentVolumeClaim:
          claimName: sonarr-downloads-nfs-pvc
      - name: tv
        persistentVolumeClaim:
          claimName: sonarr-tv-nfs-pvc
      - name: media
        persistentVolumeClaim:
          claimName: sonarr-media-nfs-pvc
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-sonarr
  namespace: downloads
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
  - host: sonarr.cynexia.net
    http:
      paths:
      - path: /
        backend:
          serviceName: sonarr-service
          servicePort: 8989
  tls:
  - hosts:
    - sonarr.cynexia.net
    secretName: sonarr.cynexia.net
