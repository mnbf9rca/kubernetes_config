apiVersion: v1
kind: Namespace
metadata:
  name: open-webui
---
apiVersion: v1
kind: Service
metadata:
  name: ollama-service
  namespace: open-webui
spec:
  selector:
    app: ollama
  ports:
  - protocol: TCP
    port: 11434
    targetPort: 11434
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: open-webui
  name: ollama-pvc
  namespace: open-webui
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 50Gi
  storageClassName: longhorn
  volumeName: ollama-pv
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: ollama-pv
  namespace: downloads
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  capacity:
      storage: 50Gi
  csi:
    driver: driver.longhorn.io
    fsType: ext4
    volumeHandle: ollama-volume
  persistentVolumeReclaimPolicy: Retain
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ollama
  namespace: open-webui
spec:
  serviceName: "ollama"
  replicas: 1
  selector:
    matchLabels:
      app: ollama
  template:
    metadata:
      labels:
        app: ollama
    spec:
      containers:
      - name: ollama
        image: ollama/ollama:latest
        ports:
        - containerPort: 11434
        resources:
          requests:
            cpu: "2000m"
            memory: "2Gi"
          limits:
            cpu: "4000m"
            memory: "4Gi"
            nvidia.com/gpu: "0"
        volumeMounts:
        - name: ollama-volume
          mountPath: /root/.ollama
        tty: true
      volumes:
      - name: ollama-volume
        persistentVolumeClaim:
          claimName: ollama-pvc
  # volumeClaimTemplates:
  # - metadata:
  #     name: ollama-volume
  #   spec:
  #     accessModes: [ "ReadWriteOnce" ]
  #     resources:
  #       requests:
  #         storage: 50Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: open-webui-deployment
  namespace: open-webui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: open-webui
  template:
    metadata:
      labels:
        app: open-webui
    spec:
      containers:
      - name: open-webui
        image: ghcr.io/open-webui/open-webui:main
        ports:
        - containerPort: 8080
          protocol: TCP
          name: oneweb-port
        resources:
          requests:
            cpu: "500m"
            memory: "500Mi"
          limits:
            cpu: "1000m"
            memory: "1Gi"
        env:
        - name: OLLAMA_BASE_URL
          value: "http://ollama-service.open-webui.svc.cluster.local:11434"
        tty: true
        volumeMounts:
        - name: webui-volume
          mountPath: /app/backend/data
      volumes:
      - name: webui-volume
        persistentVolumeClaim:
          claimName: open-webui-pvc
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: open-webui-ingress
  namespace: open-webui
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    ingress.kubernetes.io/ssl-redirect: "true"
  #annotations:
    # Use appropriate annotations for your Ingress controller, e.g., for NGINX:
    # nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: openweb.cynexia.net
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: open-webui-service
            port:
              name: oneweb-port
  tls:
  - hosts:
    - openweb.cynexia.net
    secretName: openweb.cynexia.net
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: open-webui
  name: open-webui-pvc
  namespace: open-webui
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 50Gi
  storageClassName: longhorn
  volumeName: open-webui-pv
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: open-webui-pv
  namespace: downloads
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  capacity:
      storage: 50Gi
  csi:
    driver: driver.longhorn.io
    fsType: ext4
    volumeHandle: openwebui-storage
  persistentVolumeReclaimPolicy: Retain
  volumeMode: Filesystem
---
apiVersion: v1
kind: Service
metadata:
  name: ingress-loadbalancer-onewebui
  namespace: ingress
  annotations:
    metallb.universe.tf/loadBalancerIPs: 10.100.0.248
spec:
  selector:
    name: nginx-ingress-microk8s
  type: LoadBalancer
  ports:
    - name: https
      protocol: TCP
      port: 443
      targetPort: 443
---

apiVersion: v1
kind: Service
metadata:
  name: open-webui-service
  namespace: open-webui
spec:
  type: NodePort
  selector:
    app: open-webui
  ports:
    - protocol: TCP
      port: 443
      targetPort: oneweb-port

