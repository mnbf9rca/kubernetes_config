name: Proton Drive Backup - Release

on:
  push:
    branches: [main, master]
    tags: ["v*"]
    paths:
      - "proton-drive-backup/**"
      - ".github/workflows/proton-backup-*.yml"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/proton-drive-backup

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      security-events: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435

      - name: Determine version bump from dependency changes
        id: version_bump
        run: |
          chmod +x scripts/determine-version-bump.sh
          ./scripts/determine-version-bump.sh >> $GITHUB_OUTPUT

      - name: Create release tag
        if: steps.version_bump.outputs.should_create_release == 'true'
        id: tag
        uses: anothrNick/github-tag-action@4ed44965e0db8dab2b466a16da04aec3cc312fd8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: ${{ steps.version_bump.outputs.bump_type }}
          RELEASE_BRANCHES: main,master

      - name: Log in to Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Get current date
        id: date
        run: echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Build and push multi-platform image
        id: push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: ./proton-drive-backup
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_DATE=${{ steps.date.outputs.BUILD_DATE }}
            VCS_REF=${{ github.sha }}
            VERSION=${{ steps.meta.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          sbom: true
          provenance: true

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.push.outputs.digest }}
          format: sarif
          output: trivy-results.sarif
          exit-code: 0

      - name: Upload Trivy scan results to GitHub Security
        if: always() && hashFiles('trivy-results.sarif') != ''
        uses: github/codeql-action/upload-sarif@573acd9552f33577783abde4acb66a1058e762e5
        with:
          sarif_file: trivy-results.sarif

      - name: Install Cosign
        uses: sigstore/cosign-installer@4959ce089c160fddf62f7b42464195ba1a56d382
        with:
          cosign-release: "v2.6.0"

      - name: Sign the container image
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          echo "Signing image ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.push.outputs.digest }}"
          cosign sign --yes ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.push.outputs.digest }}

      - name: Verify signature
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          cosign verify \
            --certificate-identity-regexp="^https://github.com/${{ github.repository }}/" \
            --certificate-oidc-issuer=https://token.actions.githubusercontent.com \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.push.outputs.digest }}

      - name: Create GitHub release
        if: steps.version_bump.outputs.should_create_release == 'true'
        uses: ncipollo/release-action@b7eabc95ff50cbeeedec83973935c8f306dfcd0b
        with:
          tag: ${{ steps.tag.outputs.new_tag }}
          name: ${{ steps.tag.outputs.new_tag }}
          body: |
            ## üê≥ Container Release ${{ steps.tag.outputs.new_tag }}

            **Image**: `${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.new_tag }}`
            **Digest**: `${{ steps.push.outputs.digest }}`
            **Platforms**: linux/amd64, linux/arm64

            ### üì¶ Dependency Updates
            ${{ steps.version_bump.outputs.changes }}

            ### üîí Security Features
            - ‚úÖ Signed with Cosign (keyless)
            - ‚úÖ SBOM and provenance included
            - ‚úÖ Vulnerability scanned with Trivy
            - üîç Verify signature: `cosign verify --certificate-identity-regexp="^https://github.com/${{ github.repository }}/" --certificate-oidc-issuer=https://token.actions.githubusercontent.com ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.push.outputs.digest }}`

            ### üöÄ Usage
            ```bash
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.new_tag }}
            ```
          draft: false
          prerelease: false
          allowUpdates: true
          generateReleaseNotes: true