name: Proton Drive Backup - Release

on:
  pull_request:
    types: [closed]
    branches: [main, master]
    paths:
      - "proton-drive-backup/**"
      - ".github/workflows/proton-backup-*.yml"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/proton-drive-backup

jobs:
  build-and-scan:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      security-events: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@1583c0f09d26c58c59d25b0eef29792b7ce99d9a

      - name: Determine version bump from dependency changes
        id: version_bump
        run: |
          chmod +x scripts/determine-version-bump.sh
          ./scripts/determine-version-bump.sh >> $GITHUB_OUTPUT

      - name: Create release tag
        if: steps.version_bump.outputs.should_create_release == 'true'
        id: tag
        uses: anothrNick/github-tag-action@4ed44965e0db8dab2b466a16da04aec3cc312fd8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: ${{ steps.version_bump.outputs.bump_type }}
          RELEASE_BRANCHES: main,master

      - name: Log in to Container Registry
        uses: docker/login-action@5b7b28b1cc417bbd34cd8c225a957c9ce9adf7f2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@032a4b3bda1b716928481836ac5bfe36e1feaad6
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Get current date
        id: date
        run: echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Retag image for release
        id: retag
        run: |
          # Use docker buildx imagetools to retag the existing PR image
          # Direct access to PR info since we're triggered by PR closure
          SOURCE_TAG="pr-${{ github.event.pull_request.number }}-${{ github.event.pull_request.head.sha }}"

          echo "Using source tag: ${SOURCE_TAG}"
          echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT

          echo "Retagging from source: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$SOURCE_TAG"

          # Retag to release tags
          docker buildx imagetools create \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$SOURCE_TAG \
            --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

          # Add version tags from metadata
          IFS=',' read -ra TAGS <<< "${{ steps.meta.outputs.tags }}"
          for tag in "${TAGS[@]}"; do
            tag=$(echo "$tag" | xargs) # trim whitespace
            if [[ "$tag" != *":latest" ]]; then
              echo "Adding tag: $tag"
              docker buildx imagetools create \
                ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$SOURCE_TAG \
                --tag "$tag"
            fi
          done

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          format: sarif
          output: trivy-results.sarif
          exit-code: 0

      - name: Upload Trivy scan results to GitHub Security
        if: always() && hashFiles('trivy-results.sarif') != ''
        uses: github/codeql-action/upload-sarif@0337c4c06e7e00d0d6e64396c13b9dc18dd6d8c5
        with:
          sarif_file: trivy-results.sarif
          category: trivy-container-scan

      - name: Install Cosign
        uses: sigstore/cosign-installer@d7543c93d881b35a8faa02e8e3605f69b7a1ce62
        with:
          cosign-release: "v2.6.0"

      - name: Verify signature
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          cosign verify \
            --certificate-identity-regexp="^https://github.com/${{ github.repository }}/" \
            --certificate-oidc-issuer=https://token.actions.githubusercontent.com \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:pr-${{ github.event.pull_request.number }}-${{ github.event.pull_request.head.sha }}

      - name: Create GitHub release
        if: steps.version_bump.outputs.should_create_release == 'true'
        uses: ncipollo/release-action@b7eabc95ff50cbeeedec83973935c8f306dfcd0b
        with:
          tag: ${{ steps.tag.outputs.new_tag }}
          name: ${{ steps.tag.outputs.new_tag }}
          body: |
            ## 🐳 Container Release ${{ steps.tag.outputs.new_tag }}

            **Image**: `${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.new_tag }}`
            **Source**: `${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:pr-${{ github.event.pull_request.number }}-${{ github.event.pull_request.head.sha }}`
            **Platform**: linux/amd64

            ### 📦 Dependency Updates
            ${{ steps.version_bump.outputs.changes }}

            ### 🔒 Security Features
            - ✅ Signed with Cosign (keyless)
            - ✅ SBOM and provenance included
            - ✅ Vulnerability scanned with Trivy
            - 🔍 Verify signature: `cosign verify --certificate-identity-regexp="^https://github.com/${{ github.repository }}/" --certificate-oidc-issuer=https://token.actions.githubusercontent.com ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:pr-${{ github.event.pull_request.number }}-${{ github.event.pull_request.head.sha }}`

            ### 🚀 Usage
            ```bash
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.new_tag }}
            ```
          draft: false
          prerelease: false
          allowUpdates: false
          generateReleaseNotes: true