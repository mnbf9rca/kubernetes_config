kind: Service
apiVersion: v1
metadata:
  name: couchpotato-service
  namespace: downloads
spec:
  selector:
    app: couchpotato
  type: NodePort
  ports:
  - name: cp-web-port
    protocol: TCP
    port: 5050
    targetPort: 5050
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: couchpotato-nfs-pv
  namespace: downloads
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  nfs:
    server: fs.cynexia.net
    path: "/tank/appdata/couchpotato"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: couchpotato-nfs-pvc
  namespace: downloads
spec:
  volumeName: couchpotato-nfs-pv
  accessModes:
    - ReadWriteMany
  storageClassName: ""
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: couchpotato
  namespace: downloads
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: couchpotato
  template:
    metadata:
      labels:
        app: couchpotato
    spec:
      containers:
      - name: couchpotato
        image: linuxserver/couchpotato:latest
        env:
          - name: PUID
            value: "110"
          - name: PGID
            value: "998"
        ports:
        - containerPort: 5050
          protocol: TCP
          name: cpwebport
        startupProbe:
            failureThreshold: 15
            httpGet:
              path: /
              port: cpwebport
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
        livenessProbe:
            httpGet:
              path: /
              port: cpwebport
              scheme: HTTP
            failureThreshold: 5
            periodSeconds: 10
        volumeMounts:
        - name: config
          mountPath: /config
        - name: downloads
          mountPath: /downloads
        - name: movies
          mountPath: /movies
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: couchpotato-nfs-pvc
      - name: downloads
        persistentVolumeClaim:
          claimName: downloads-nfs-pvc
      - name: movies
        persistentVolumeClaim:
          claimName: movies-nfs-pvc
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-couchpotato
  namespace: downloads
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
  - host: cp.cynexia.net
    http:
      paths:
      - backend:
          service:
            name: couchpotato-service
            port:
              name: cp-web-port
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - cp.cynexia.net
    secretName: cp.cynexia.net
